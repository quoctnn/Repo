patch-package
--- a/node_modules/draft-js-emoji-plugin/lib/components/EmojiSelect/index.js
+++ b/node_modules/draft-js-emoji-plugin/lib/components/EmojiSelect/index.js
@@ -54,25 +54,10 @@ var EmojiSelect = function (_Component) {
       args[_key] = arguments[_key];
     }
 
-    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EmojiSelect.__proto__ || Object.getPrototypeOf(EmojiSelect)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
-      isOpen: false
-    }, _this.onClick = function (e) {
+    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EmojiSelect.__proto__ || Object.getPrototypeOf(EmojiSelect)).call.apply(_ref, [this].concat(args))), _this), 
+     _this.onClick = function (e) {
       e.stopPropagation();
       e.nativeEvent.stopImmediatePropagation();
-    }, _this.onButtonMouseUp = function () {
-      return _this.state.isOpen ? _this.closePopover() : _this.openPopover();
-    }, _this.openPopover = function () {
-      if (!_this.state.isOpen) {
-        _this.setState({
-          isOpen: true
-        });
-      }
-    }, _this.closePopover = function () {
-      if (_this.state.isOpen) {
-        _this.setState({
-          isOpen: false
-        });
-      }
     }, _temp), _possibleConstructorReturn(_this, _ret);
   }
 
@@ -86,12 +71,10 @@ var EmojiSelect = function (_Component) {
     // When the selector is open and users click anywhere on the page,
     // the selector should close
     value: function componentDidMount() {
-      document.addEventListener('click', this.closePopover);
     }
   }, {
     key: 'componentWillUnmount',
     value: function componentWillUnmount() {
-      document.removeEventListener('click', this.closePopover);
     }
 
     // Open the popover
@@ -110,24 +93,13 @@ var EmojiSelect = function (_Component) {
           theme = _props$theme === undefined ? {} : _props$theme,
           store = _props.store,
           selectGroups = _props.selectGroups,
-          selectButtonContent = _props.selectButtonContent,
           toneSelectOpenDelay = _props.toneSelectOpenDelay,
-          useNativeArt = _props.useNativeArt;
-
-      var buttonClassName = this.state.isOpen ? theme.emojiSelectButtonPressed : theme.emojiSelectButton;
+          useNativeArt = _props.useNativeArt,
+          isOpen = _props.isOpen
 
       return _react2.default.createElement(
         'div',
         { className: theme.emojiSelect, onClick: this.onClick },
-        _react2.default.createElement(
-          'button',
-          {
-            className: buttonClassName,
-            onMouseUp: this.onButtonMouseUp,
-            type: 'button'
-          },
-          selectButtonContent
-        ),
         _react2.default.createElement(_Popover2.default, {
           cacheBustParam: cacheBustParam,
           imagePath: imagePath,
@@ -137,7 +109,7 @@ var EmojiSelect = function (_Component) {
           groups: selectGroups,
           emojis: emojis,
           toneSelectOpenDelay: toneSelectOpenDelay,
-          isOpen: this.state.isOpen,
+          isOpen: isOpen,
           useNativeArt: useNativeArt
         })
       );
@@ -158,13 +130,13 @@ EmojiSelect.propTypes = {
     icon: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]).isRequired,
     categories: _propTypes2.default.arrayOf(_propTypes2.default.oneOf(Object.keys(emojis))).isRequired
   })),
-  selectButtonContent: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]),
   toneSelectOpenDelay: _propTypes2.default.number,
-  useNativeArt: _propTypes2.default.bool
+  useNativeArt: _propTypes2.default.bool,
+  isOpen:_propTypes2.default.bool
 };
 EmojiSelect.defaultProps = {
-  selectButtonContent: 'â˜º',
   selectGroups: _defaultEmojiGroups2.default,
-  toneSelectOpenDelay: 500
+  toneSelectOpenDelay: 500,
+  isOpen:false
 };
 exports.default = EmojiSelect;
\ No newline at end of file
--- a/node_modules/draft-js-emoji-plugin/lib/index.js
+++ b/node_modules/draft-js-emoji-plugin/lib/index.js
@@ -108,51 +108,49 @@ var defaultImageType = 'svg';
 var defaultCacheBustParam = '?v=2.2.7';
 
 // TODO activate/deactivate different the conversion or search part
+var defaultTheme = exports.defaultTheme = {
+  emoji: _emojiStyles2.default.emoji,
 
-exports.default = function () {
-  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
-
-  var defaultTheme = {
-    emoji: _emojiStyles2.default.emoji,
-
-    emojiSuggestions: _emojiSuggestionsStyles2.default.emojiSuggestions,
+  emojiSuggestions: _emojiSuggestionsStyles2.default.emojiSuggestions,
 
-    emojiSuggestionsEntry: _emojiSuggestionsEntryStyles2.default.emojiSuggestionsEntry,
-    emojiSuggestionsEntryFocused: _emojiSuggestionsEntryStyles2.default.emojiSuggestionsEntryFocused,
-    emojiSuggestionsEntryText: _emojiSuggestionsEntryStyles2.default.emojiSuggestionsEntryText,
-    emojiSuggestionsEntryIcon: _emojiSuggestionsEntryStyles2.default.emojiSuggestionsEntryIcon,
+  emojiSuggestionsEntry: _emojiSuggestionsEntryStyles2.default.emojiSuggestionsEntry,
+  emojiSuggestionsEntryFocused: _emojiSuggestionsEntryStyles2.default.emojiSuggestionsEntryFocused,
+  emojiSuggestionsEntryText: _emojiSuggestionsEntryStyles2.default.emojiSuggestionsEntryText,
+  emojiSuggestionsEntryIcon: _emojiSuggestionsEntryStyles2.default.emojiSuggestionsEntryIcon,
 
-    emojiSelect: _emojiSelectStyles2.default.emojiSelect,
+  emojiSelect: _emojiSelectStyles2.default.emojiSelect,
 
-    emojiSelectButton: _emojiSelectStyles2.default.emojiSelectButton,
-    emojiSelectButtonPressed: _emojiSelectStyles2.default.emojiSelectButtonPressed,
+  emojiSelectButton: _emojiSelectStyles2.default.emojiSelectButton,
+  emojiSelectButtonPressed: _emojiSelectStyles2.default.emojiSelectButtonPressed,
 
-    emojiSelectPopover: _emojiSelectStyles2.default.emojiSelectPopover,
-    emojiSelectPopoverClosed: _emojiSelectStyles2.default.emojiSelectPopoverClosed,
-    emojiSelectPopoverTitle: _emojiSelectStyles2.default.emojiSelectPopoverTitle,
-    emojiSelectPopoverGroups: _emojiSelectStyles2.default.emojiSelectPopoverGroups,
+  emojiSelectPopover: _emojiSelectStyles2.default.emojiSelectPopover,
+  emojiSelectPopoverClosed: _emojiSelectStyles2.default.emojiSelectPopoverClosed,
+  emojiSelectPopoverTitle: _emojiSelectStyles2.default.emojiSelectPopoverTitle,
+  emojiSelectPopoverGroups: _emojiSelectStyles2.default.emojiSelectPopoverGroups,
 
-    emojiSelectPopoverGroup: _emojiSelectStyles2.default.emojiSelectPopoverGroup,
-    emojiSelectPopoverGroupTitle: _emojiSelectStyles2.default.emojiSelectPopoverGroupTitle,
-    emojiSelectPopoverGroupList: _emojiSelectStyles2.default.emojiSelectPopoverGroupList,
-    emojiSelectPopoverGroupItem: _emojiSelectStyles2.default.emojiSelectPopoverGroupItem,
+  emojiSelectPopoverGroup: _emojiSelectStyles2.default.emojiSelectPopoverGroup,
+  emojiSelectPopoverGroupTitle: _emojiSelectStyles2.default.emojiSelectPopoverGroupTitle,
+  emojiSelectPopoverGroupList: _emojiSelectStyles2.default.emojiSelectPopoverGroupList,
+  emojiSelectPopoverGroupItem: _emojiSelectStyles2.default.emojiSelectPopoverGroupItem,
 
-    emojiSelectPopoverToneSelect: _emojiSelectStyles2.default.emojiSelectPopoverToneSelect,
-    emojiSelectPopoverToneSelectList: _emojiSelectStyles2.default.emojiSelectPopoverToneSelectList,
-    emojiSelectPopoverToneSelectItem: _emojiSelectStyles2.default.emojiSelectPopoverToneSelectItem,
+  emojiSelectPopoverToneSelect: _emojiSelectStyles2.default.emojiSelectPopoverToneSelect,
+  emojiSelectPopoverToneSelectList: _emojiSelectStyles2.default.emojiSelectPopoverToneSelectList,
+  emojiSelectPopoverToneSelectItem: _emojiSelectStyles2.default.emojiSelectPopoverToneSelectItem,
 
-    emojiSelectPopoverEntry: _emojiSelectStyles2.default.emojiSelectPopoverEntry,
-    emojiSelectPopoverEntryFocused: _emojiSelectStyles2.default.emojiSelectPopoverEntryFocused,
-    emojiSelectPopoverEntryIcon: _emojiSelectStyles2.default.emojiSelectPopoverEntryIcon,
+  emojiSelectPopoverEntry: _emojiSelectStyles2.default.emojiSelectPopoverEntry,
+  emojiSelectPopoverEntryFocused: _emojiSelectStyles2.default.emojiSelectPopoverEntryFocused,
+  emojiSelectPopoverEntryIcon: _emojiSelectStyles2.default.emojiSelectPopoverEntryIcon,
 
-    emojiSelectPopoverNav: _emojiSelectStyles2.default.emojiSelectPopoverNav,
-    emojiSelectPopoverNavItem: _emojiSelectStyles2.default.emojiSelectPopoverNavItem,
-    emojiSelectPopoverNavEntry: _emojiSelectStyles2.default.emojiSelectPopoverNavEntry,
-    emojiSelectPopoverNavEntryActive: _emojiSelectStyles2.default.emojiSelectPopoverNavEntryActive,
+  emojiSelectPopoverNav: _emojiSelectStyles2.default.emojiSelectPopoverNav,
+  emojiSelectPopoverNavItem: _emojiSelectStyles2.default.emojiSelectPopoverNavItem,
+  emojiSelectPopoverNavEntry: _emojiSelectStyles2.default.emojiSelectPopoverNavEntry,
+  emojiSelectPopoverNavEntryActive: _emojiSelectStyles2.default.emojiSelectPopoverNavEntryActive,
 
-    emojiSelectPopoverScrollbar: _emojiSelectStyles2.default.emojiSelectPopoverScrollbar,
-    emojiSelectPopoverScrollbarThumb: _emojiSelectStyles2.default.emojiSelectPopoverScrollbarThumb
-  };
+  emojiSelectPopoverScrollbar: _emojiSelectStyles2.default.emojiSelectPopoverScrollbar,
+  emojiSelectPopoverScrollbarThumb: _emojiSelectStyles2.default.emojiSelectPopoverScrollbarThumb
+};
+exports.default = function () {
+  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
 
   var callbacks = {
     keyBindingFn: undefined,
